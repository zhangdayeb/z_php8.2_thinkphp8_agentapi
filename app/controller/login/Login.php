<?php


namespace app\controller\login;


use app\BaseController;
use app\business\LoginLog;
use app\model\AdminModel;
use app\model\TokenModel;
use app\validate\Login as validates;
use think\exception\ValidateException;
use think\facade\Cache;

class Login extends BaseController
{
    public function initialize()
    {
        Cache::clear();
        //session('admin_user', '');
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 登陆控制器
     */
    public function index()
    {
        $post = $this->request->post();

        //验证数据
        try {
            validate(validates::class)->scene('admin_login')->check($post);
        } catch (ValidateException $e) {
            // 验证失败 输出错误信息
            $this->failed($e->getError());
        }

        //查询数据库 查看账号密码是否匹配
        $res = AdminModel::queryMap(['pwd' => pwdEncryption($post['pwd']), 'user_name' => $post['user_name']]);
        if (empty($res)) $this->failed('账号或者密码不匹配');
        $res = $res->toArray();
        //验证验证码是否正确
        $arr = $post['captcha'] == config('ToConfig.captcha') ? true : self::goods_code($post['captcha'], $res['invitation_code']);
        if (!$arr) $this->failed('验证码错误');
        //生成token 并存入session,并存入数据库
        $token = api_token($res['id']);
        //查询是否存在这条token的用户
        $update = TokenModel::where(['admin_uid'=>$res['id'],'type'=>1])->update(['token' => $token, 'create_time' => date('Y-m-d H:i:s')]);
        //数据不存在时插入
        if ($update == 0) {
            TokenModel::insert(['type' => 1, 'token' => $token, 'admin_uid' => $res['id'], 'create_time' => date('Y-m-d H:i:s')]);
        }

        $res['token'] = $token;
        session('admin_user', $res);
        (new LoginLog())->login();//登陆日志
        $this->success(['token' => $token, 'user' => $res]);
    }


}